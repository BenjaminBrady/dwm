.TH DWM 1 "February 2023" dwm\-VERSION dwm\-jam\-JAMVER
.SH NAME
dwm \- dynamic window manager
.SH SYNOPSIS
.B dwm
.RB [ \-v ]
.SH DESCRIPTION
dwm is a dynamic window manager for X. It manages windows in: tiled, monocle,
and floating layouts. The layouts may be applied dynamically, optimising the
environment for the application in use and the task being performed.
.P
In tiled layout mode: the screen is split into two areas, the master area on
the left, and the stacking area on the right. The master area contains the top
window on the stack whilest the stacking area contains the rest of the stack.
If the stack contains only one window, then it is maximised to the entire
available area.

In monocle layout mode: all windows are maximised to the entire available area.

In floating layout mode: windows may be resized and moved freely, not snapping
towards any partitions. Dialogue windows are always managed floating,
regardless of the currently selected layout.
.P
Each window is tagged with one or more tags. Selecting a grouping of tags forms
a stack displaying exactly those windows which have the selected tags.

Each screen contains a small status bar which displays: all tags which are in
use (contain at least one window), the title of the currently focused window,
and the status bar itself which reads the X root window name property, if the
screen is focused.
.P
All floating windows are marked with an empty square if they are floating and a
filled square if they are maxmised and floating.

The selected tags are indicated with a different colour. The tags of the
focused window are indicated with a different colour. If the focused window is
associated with more than one tag, all associated tags are indicated with a
filled square in the top left corner. Any tags which contained a shared window
is indicated with an empty square in the top left corner.
.P
Each window has a small border around it to display the focus state.
.SH OPTIONS
.TP
.B \-v
Print version information to standard error, then exit.
.SH USAGE
.SS Status bar
.TP
.B X root window name
is read and displayed in the status text area. It can be set with the
.BR xsetroot (1)
command.
.TP
.B Button1
Click on a tag label to display all windows with that tag, click on the layout
label to toggle between the tiled and floating layouts.
.TP
.B Button3
Click on a tag label to add/remove all windows with that tag to/from the view.
.TP
.B Mod4\-Button1
Click on a tag label to apply that tag to the focused window.
.TP
.B Mod4\-Button3
Click on a tag label to add/remove that tag to/from the focused window.
.SS Keyboard commands
.TP
.B Mod4\-Return
Start
.BR st(1) .
.TP
.B Mod4\-Shift\-Return
Move the focused window to the top of the stack.
.TP
.B Mod4\-Backspace
Lock the screen using
.BR slock(1) .
.TP
.B Mod4\-Shift\-Control\-Backspace
Quit
.BR dwm .
.TP
.B Mod4\-[1..9]
View all windows associated with the pressed tags.
.TP
.B Mod4\-Shift\-[1..9]
Set the associated tags of the focused window to the pressed tags.
.TP
.B Mod4\-Control\-[1..9]
Toggle the view of all windows with the pressed tags.
.TP
.B Mod4\-Shift\-Control\-[1..9]
Toggle the association with pressed tags for the focused window.
.TP
.B Mod4\-0
View all windows.
.TP
.B Mod4\-Shift\-0
Associate the focused window with all tags.
.TP
.B Mod4\-=
Revert to the most recent selection of tags to be displayed.
.TP
.B Mod4\-,
Change the focus to the previous screen.
.TP
.B Mod4\-Shift\-,
Send the focused window to the previous screen.
.TP
.B Mod4\-.
Change the focus to the next screen.
.TP
.B Mod4\-Shift\-.
Send the focused window to the next screen.
.TP
.B Mod4\-q
Kill the focused window.
.TP
.B Mod4\-Shift\-Control\-q
Quit
.BR dwm .
.TP
.B Mod4\-w
Open the browser ($BROWSER).
.TP
.B Mod4\-Shift\-w
Open
.BR nmtui(1) .
.TP
.B Mod4\-e
Open the mail client ($MAILCLIENT).
.TP
.B Mod4\-t
Set the layout to tiled mode.
.TP
.B Mod4\-Shift\-t
Open
.BR htop .
.TP
.B Mod4\-y
Increase the outer horizontal gaps.
.TP
.B Mod4\-Shift\-y
Decrease the outer horizontal gaps.
.TP
.B Mod4\-u
Increase the outer vertical gaps.
.TP
.B Mod4\-Shift\-u
Decrease the outer vertical gaps.
.TP
.B Mod4\-i
Increase the inner vertical gaps.
.TP
.B Mod4\-Shift\-i
Decrease the inner vertical gaps.
.TP
.B Mod4\-o
Increase the inner horizontal gaps.
.TP
.B Mod4\-Shift\-o
Decrease the inner horizontal gaps.
.TP
.B Mod4\-p
Spawn a dmenu prompt to run a command.
.TP
.B Mod4\-s
Toggle the stickiness of the focused window.
.TP
.B Mod4\-d
Spawn a dmenu prompt to run a command.
.TP
.B Mod4\-f
Set the layout to floating mode.
.TP
.B Mod4\-Shift\-f
Toggle the focused window to/from fullscreen.
.TP
.B Mod4\-g
Toggle the gaps.
.TP
.B Mod4\-Shift\-g
Reset the gaps to their default sizes.
.TP
.B Mod4\-h
Reduce the master window\'s screen percentage by five percent.
.TP
.B Mod4\-j
Focus the previous window in the stack.
.TP
.B Mod4\-Shift\-j
Decrement the focused window\'s stack position.
.TP
.B Mod4\-k
Focus the next window in the stack.
.TP
.B Mod4\-Shift\-k
Increment the focused window\'s stack position.
.TP
.B Mod4\-l
Increase the master window\'s screen percentage by five percent.
.TP
.B Mod4\-z
Increase the size of all gaps.
.TP
.B Mod4\-x
Decrease the size of all gaps.
.TP
.B Mod4\-c
Open
.BR bc(1) .
.TP
.B Mod4\-Shift\-c
Open
.BR bc(1) .
.TP
.B Mod4\-v
Open
.BR vim(1) .
.TP
.B Mod4\-b
Toggle the statusbar.
.TP
.B Mod4\-n
Spawn the script
.BR rss .
.TP
.B Mod4\-m
Set the layout to monocle mode.
.TP
.B Mod4\-Control\-m
Focus the master window.
.TP
.B Print
Take a screenshot using
.BR maim(1) .
.TP
.B Mod4\-Insert
Send a notification which contains the contents of the X clipboard.
.TP
.B AudioMute
Toggle the system audio between muted/unmuted using
.BR pamixer(1) .
.TP
.B AudioRaiseVolume
Increase the system audio volume using
.BR pamixer(1) .
.TP
.B AudioLowerVolume
Decrease the system audio volume using
.BR pamixer(1) .
.SS Mouse commands
.TP
.B Mod4\-Button1
Drag the focused window. If the focused window is tiled, then make it a
floating window.
.TP
.B Mod4\-Button2
Toggle the focused window between floating and tiled mode.
.TP
.B Mod4\-Button3
Resize the focused window whilest dragging it. If the focused window is tiled,
then make it a floating window.
.SH CUSTOMISATION
dwm is customised by creating a custom config.h (making sure to add any desired
function to the proper location, usually dwm.c) and (re)compiling the source
code. This keeps it: fast, secure, and simple.
.SH SEE ALSO
.BR dmenu (1),
.BR st (1)
.SH ISSUES
Java applications which use the XToolkit/XAWT backend may end up only drawing
grey windows. The XToolkit/XAWT backend breaks ICCCM-compliance in recent JDK
1.5 and early JDK 1.6 versions because it assumes a reparenting window manager.
Possible workarounds are to use JDK 1.4 (which doesn\'t contain the
XToolkit/XAWT backend) or to set the environment variable
.BR AWT_TOOLKIT=MToolkit
(to use the older Motif backend instead) or run
.B xprop -root -f _NET_WM_NAME 32a -set _NET_WM_NAME LG3D
or
.B wmname LG3D
(to pretend that a non-reparenting window manager is running which the
XToolkit/XAWT backend can recognise) or, when using OpenJDK, set the
environment variable
.BR _JAVA_AWT_WM_NONREPARENTING=1 .
.SH BUGS
Send all bug reports with a patch to hackers@suckless.org.
.SH AUTHOR
Rewritten by Benjamin Brady.
